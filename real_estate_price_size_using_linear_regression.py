# -*- coding: utf-8 -*-
"""Real_estate_price_size Using Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AIN4kIxtzg2Qb_53lb4-9S37bF12ev0W
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/real_estate_price_size.csv')

df.head(10)

df.tail(10)

df.shape

df.info()

df.describe()

a=df['price']
plt.plot(a)

b=df['size']
c=df['price']
plt.scatter(b,c)

d=df['price']
plt.hist(d)

e=df['size']
plt.bar(e,width=100,height=100)

f=df['price']
plt.pie(f)

A=df['price']
B=df['size']
sns.lineplot(x=A,y=B,data=df)

C=df['price']
D=df['size']
sns.scatterplot(x=C,y=D,data=df)

E=df['price']
F=df['size']
sns.barplot(x=E,y=F,data=df)

sns.countplot(x='price',data=df)

sns.pairplot(df,hue='size')

x=[23,45,5545,34,23]
y=[10,20,30,40,50]
sns.distplot(x,y)

df.isnull().sum()

s=df['price']
sns.boxplot(s)

x=df.drop('price',axis=1)
x

y=df['price']
y

x_matrix=x.values.reshape(x.values.size,1)
x_matrix.shape

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=0)

x_train.shape

x_test.shape

#from sklearn.preprocessing import StandardScaler

#std=StandardScaler()

#a=std.fit_transform(x_train)
a

from sklearn.linear_model import LinearRegression

clf=LinearRegression()

clf.fit(x_train,y_train)

pred=clf.predict(x_test)

clf.coef_

clf.predict([[100]])

clf.predict([[12],[100]])

from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error

mae=mean_absolute_error(y_test,pred)
mse=mean_squared_error(y_test,pred)
rmse=np.sqrt(mean_squared_error(y_test,pred))

print('mean_absolute_error:',mae)
print('mean_squared_error:',mse)
print('root_mean_squared_error:',rmse)

r2_score(y_test,pred)